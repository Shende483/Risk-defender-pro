pipeline {
    agent any
    tools {
        nodejs 'Node-20'
    }
    environment {
        MONGO_URI = credentials('mongo-uri')
        REDIS_URL = credentials('redis-url')
        KAFKA_BROKERS = credentials('kafka-brokers')
        JWT_SECRET = credentials('jwt-secret')
    }
    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/Shende483/Risk-defender-pro.git'
            }
        }
        stage('Install Dependencies') {
            steps {
                dir('frontend') {
                    sh 'yarn install --frozen-lockfile'
                }
                dir('backend') {
                    sh 'yarn install --frozen-lockfile'
                }
            }
        }
        stage('Lint and Test') {
            steps {
                dir('frontend') {
                    sh 'yarn lint'
                    sh 'yarn fm:check'
                }
                dir('backend') {
                    sh 'yarn lint'
                    sh 'yarn test'
                }
            }
        }
        stage('Build') {
            steps {
                dir('frontend') {
                    sh 'yarn build'
                }
                dir('backend') {
                    sh 'yarn build'
                }
            }
        }
        stage('Build Docker Images') {
            steps {
                dir('frontend') {
                    sh 'docker build -t trading-frontend:latest -f Dockerfile.frontend .'
                }
                dir('backend') {
                    sh 'docker build -t trading-backend:latest -f Dockerfile.backend .'
                }
            }
        }
        stage('Deploy Locally') {
            steps {
                sh 'docker-compose -f docker-compose.yml up -d --build'
            }
        }
    }
    post {
        always {
            echo 'Cleaning up...'
            sh 'docker-compose -f docker-compose.yml down || true'
        }
        success {
            echo 'Local deployment successful! Access frontend at http://localhost:3030'
        }
        failure {
            echo 'Local deployment failed!'
        }
    }
}
